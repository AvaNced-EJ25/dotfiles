# vim: syntax=toml : commentstring=#\ %s
console_title_template = {{ "'{{.Folder}} :: {{.HostName}} :: {{if .Root}}[root]{{end}}{{.Shell}}'" }}
version = 3
final_space = true

[palette]
  bg = '#24273A'
  blue = '#8AADF4'
  green = '#A6DA95'
  lavender = '#B7BDF8'
  mauve = '#c6a0f6'
  peach = '#f5a97f'
  pink = '#F5BDE6'
  red = '#ED8796'
  sky = '#91d7e3'
  text = '#494D64'
  yellow = '#eed49f'

[secondary_prompt]
  template = ''
  foreground = 'p:blue'
  background = 'transparent'

[transient_prompt]
  template = {{ "':3 <p:sky>[{{ .Shell }} {{now | date \"15:04:05\"}}]</> 󱢇 '" }}
  newline = true
  foreground = 'p:pink'
  background = 'transparent'

[[blocks]]
  type = 'prompt'
  alignment = 'left'

  [[blocks.segments]]
    style = 'powerline'
    template = {{ "'{{ if .WSL }} WSL {{ end }}{{.Icon}} '" }}
    foreground = 'p:text'
    powerline_symbol = ''
    background = 'p:blue'
    type = 'os'
    leading_powerline_symbol = ''

  [[blocks.segments]]
    style = 'powerline'
    template = {{ "' {{ .UserName }}@{{ .HostName }}'" }}
    foreground = 'p:text'
    powerline_symbol = ''
    background_templates = [ {{ "'{{ if .SSHSession }}p:sky{{ end }}'" }}, "p:pink" ]
    type = 'session'

  [[blocks.segments]]
    style = 'powerline'
    template = '  '
    foreground = 'p:text'
    powerline_symbol = ''
    background = 'p:yellow'
    type = 'root'

  [[blocks.segments]]
    style = 'powerline'
    template = {{ "'  {{ .CurrentDate | date .Format }}'" }}
    foreground = 'p:text'
    powerline_symbol = ''
    background = 'p:mauve'
    type = 'time'

    [blocks.segments.properties]
      time_format = '15:04:05'

  [[blocks.segments]]
    style = 'powerline'
    template = {{ "' {{ if not .Error }}{{ .Icon }}{{ .Percentage }}{{ end }} '" }}
    foreground = 'p:text'
    powerline_symbol = ''
    background = 'p:yellow'
    type = 'battery'
    background_templates = [{{ "'{{if eq \"Charging\" .State.String}}p:mauve{{end}}', '{{if eq \"Discharging\" .State.String}}p:peach{{end}}', '{{if eq \"Full\" .State.String}}p:green{{end}}'" }}]

    [blocks.segments.properties]
      charged_icon = '󰂅 '
      charging_icon = '󰢟 '
      discharging_icon = '󰂍 '

[[blocks]]
  type = 'prompt'
  alignment = 'right'
  overflow = 'hide'

  [[blocks.segments]]
    style = 'plain'
    template = {{ "' x{{ reason .Code }} '" }}
    foreground = 'p:green'
    type = 'status'
    alias = 'Err'
    foreground_templates = [{{ "'{{ if gt .Code 0 }}p:red{{ end }}'" }}]

  [[blocks.segments]]
    style = 'powerline'
    template = {{ "'{{ .FormattedMs }}'" }}
    foreground = 'p:text'
    powerline_symbol = ''
    background = 'p:green'
    type = 'executiontime'
    leading_powerline_symbol = ''
    background_templates = [{{ "'{{ if gt .Code 0 }}p:red{{ end }}'" }}]

    [blocks.segments.properties]
      always_enabled = true
      style = 'roundrock'

  [[blocks.segments]]
    style = 'powerline'
    template = {{ "'  {{ .Shell }}'" }}
    foreground = 'p:text'
    powerline_symbol = ''
    background = 'p:pink'
    type = 'text'
    leading_powerline_symbol = ''

[[blocks]]
    type = 'prompt'
    alignment = 'left'
    newline = true
    overflow = 'break'

  [[blocks.segments]]
    style = 'powerline'
    template = {{ "'{{ .Path }}'" }}
    foreground = 'p:text'
    powerline_symbol = ''
    leading_powerline_symbol = ''
    background = 'p:pink'
    type = 'path'

    [blocks.segments.properties]
      folder_icon = '..  ..'
      home_icon = '󱂵 '
      max_depth = 3
      style = 'agnoster_short'

      [blocks.segments.properties.mapped_locations]
        '~/.dotfiles' = ' '
        '~/Downloads' = '󰉍 '
        '~/dev' = '󰵮 '
        {{- if eq .chezmoi.os  "linux" }}
        '/mnt/dev' = '󰵮 '
        {{- else if eq .chezmoi.os "windows" }}
        'C:/Dev' = '󰵮 '
        {{- end }}

    [[blocks.segments]]
    style = 'powerline'
    template = {{ "' {{ .UpstreamIcon }} {{ .HEAD }}{{if .BranchStatus }} {{ .BranchStatus }}{{ end }}{{ if .Working.Changed }}  {{ .Working.String }}{{ end }}{{ if and (.Working.Changed) (.Staging.Changed) }} |{{ end }}{{ if .Staging.Changed }}  {{ .Staging.String }}{{ end }}{{ if gt .StashCount 0 }}  {{ .StashCount }}{{ end }}'" }}
    foreground = 'p:text'
    powerline_symbol = ''
    background = 'p:lavender'
    type = 'git'
    background_templates = [{{ "'{{ if or (.Working.Changed) (.Staging.Changed) }}p:yellow{{ end }}', '{{ if and (gt .Ahead 0) (gt .Behind 0) }}p:peach{{ end }}', '{{ if gt .Ahead 0 }}p:mauve{{ end }}', '{{ if gt .Behind 0 }}p:mauve{{ end }}'" }}]
    min_width = 100

    [blocks.segments.properties]
    branch_icon = ' '
    branch_template = [{{ "'{{ truncE 32 .Branch }}'" }}]
    cherry_pick_icon = ' '
    commit_icon = ' '
    fetch_status = true
    fetch_upstream_icon = true
    merge_icon = ' '
    no_commits_icon = ' '
    rebase_icon = ' '
    revert_icon = ' '
    source = 'cli'
    tag_icon = ' '
    truncate_symbol = '󰇘'

    [blocks.segments.properties.mapped_branches]
    "feature/*" = "󱓞 "
    "bugfix/*" = "󰃤 "

[[blocks]]
    type = 'prompt'
    alignment = 'right'
    overflow = 'hide'

    [[blocks.segments]]
    style = 'powerline'
    type = 'python'
    powerline_symbol = ''
    leading_powerline_symbol = ''
    template = {{ "' {{ if .Error }}{{ .Error }}{{ else }}{{ if .Venv }}{{ .Venv }} {{ end }}{{ .Full }}{{ end }}'" }}
    foreground = 'p:text'
    background = 'p:yellow'

    [blocks.segments.properties]
    fetch_virtual_env = true
    home_enabled = true

    [[blocks.segments]]
    type = 'project'
    style = 'powerline'
    powerline_symbol = ''
    leading_powerline_symbol = ''
    foreground = 'p:text'
    background = 'p:peach'
    template = {{ "' {{ if .Error }}{{ .Error }}{{ else }}{{ if .Version }} {{.Version}}{{ end }} {{ if .Name }}{{ .Name }}{{ end }}{{ end }}'" }}

[[blocks]]
  type = 'prompt'
  alignment = 'left'
  newline = true

  [[blocks.segments]]
    style = 'plain'
    template = ':3 󱢇 '
    foreground = 'p:green'
    type = 'text'
